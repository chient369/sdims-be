package com.company.internalmgmt.modules.margin.model;

import com.company.internalmgmt.common.model.BaseEntity;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.NoArgsConstructor;
import lombok.experimental.SuperBuilder;
import org.hibernate.annotations.Where;

import javax.persistence.*;
import java.math.BigDecimal;
import java.time.LocalDateTime;

/**
 * Entity representing monthly revenue generated by an employee for a specific contract
 */
@Data
@EqualsAndHashCode(callSuper = true)
@SuperBuilder
@NoArgsConstructor
@AllArgsConstructor
@Entity
@Table(name = "employee_revenues", uniqueConstraints = {
    @UniqueConstraint(name = "uq_employee_revenue_period", columnNames = {"employee_id", "contract_id", "year", "month"})
})
@Where(clause = "deleted_at IS NULL")
public class EmployeeRevenue extends BaseEntity {

    @Column(name = "employee_id", nullable = false)
    private Long employeeId;

    @Column(name = "contract_id", nullable = false)
    private Long contractId;

    @Column(name = "year", nullable = false)
    private Integer year;

    @Column(name = "month", nullable = false)
    private Integer month;

    @Column(name = "billing_rate", precision = 15, scale = 2)
    private BigDecimal billingRate;

    @Column(name = "allocation_percentage", precision = 5, scale = 2)
    private BigDecimal allocationPercentage;

    @Column(name = "calculated_revenue", nullable = false, precision = 15, scale = 2)
    private BigDecimal calculatedRevenue;

    @Column(name = "currency", length = 3, nullable = false)
    private String currency;

    @Column(name = "note")
    private String note;

    @Column(name = "created_by")
    private Long createdBy;

    @Column(name = "updated_by")
    private Long updatedBy;

    @Column(name = "deleted_at")
    private LocalDateTime deletedAt;
} 